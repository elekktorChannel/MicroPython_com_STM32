import pyb
import stm

def f_signed_to_unsined_32(v_num):
    if v_num < 0:
        return (v_num + 2**32)
    else:
        return v_num

def main():
    print()
    print("APB1")
    print(f'@TIM2   = {hex(stm.TIM2)}')
    print(f'@TIM3   = {hex(stm.TIM3)}')
    print(f'@TIM4   = {hex(stm.TIM4)}')
    print(f'@RTC    = {hex(stm.RTC)}')
    print(f'@WWDG   = {hex(stm.WWDG)}')
    print(f'@IWDG   = {hex(stm.IWDG)}')
    print(f'@USART2 = {hex(stm.USART2)}')
    print(f'@I2C1   = {hex(stm.I2C1)}')
    print(f'@I2C2   = {hex(stm.I2C2)}')
    print(f'@I2C3   = {hex(stm.I2C3)}')
    print(f'@PWR    = {hex(stm.PWR)}')
    print()
    print("APB2")
    print(f'@TIM1   = {hex(stm.TIM1)}')
    print(f'@USART1 = {hex(stm.USART1)}')
    print(f'@USART6 = {hex(stm.USART6)}')
    print(f'@ADC1   = {hex(stm.ADC1)}')
    print(f'@SDIO   = {hex(stm.SDIO)}')
    print(f'@SPI1   = {hex(stm.SPI1)}')
    print(f'@SPI4   = {hex(stm.SPI4)}')
    print(f'@SYSCFG = {hex(stm.SYSCFG)}')
    print(f'@EXTI   = {hex(stm.EXTI)}')
    print(f'@TIM9   = {hex(stm.TIM9)}')
    print(f'@TIM10  = {hex(stm.TIM10)}')
    print(f'@TIM11  = {hex(stm.TIM11)}')
    print(f'@SPI5   = {hex(stm.SPI5)}')
    print()
    print("AHB1")
    print(f'@GPIOA  = {hex(stm.GPIOA)}')
    print(f'@GPIOB  = {hex(stm.GPIOB)}')
    print(f'@GPIOC  = {hex(stm.GPIOC)}')
    print(f'@GPIOD  = {hex(stm.GPIOD)}')
    print(f'@GPIOH  = {hex(stm.GPIOH)}')
    print(f'@RCC    = {hex(stm.RCC)}')
    print(f'@FLASH  = {hex(stm.FLASH)}')
    print(f'@DMA1   = {hex(stm.DMA1)}')
    print(f'@DMA2   = {hex(stm.DMA2)}')
    print()
    print("AHB2")
    print(f'@USB_OTG_FS  = {hex(stm.USB_OTG_FS)}')
    print()
    print(f'Offset @GPIO_MODER   = {hex(stm.GPIO_MODER)}')
    print(f'Offset @GPIO_OTYPER  = {hex(stm.GPIO_OTYPER)}')
    print(f'Offset @GPIO_OSPEEDR = {hex(stm.GPIO_OSPEEDR)}')
    print(f'Offset @GPIO_PUPDR   = {hex(stm.GPIO_PUPDR)}')
    print(f'Offset @GPIO_IDR     = {hex(stm.GPIO_IDR)}')
    print(f'Offset @GPIO_ODR     = {hex(stm.GPIO_ODR)}')
    print(f'Offset @GPIO_LCKR    = {hex(stm.GPIO_LCKR)}')
    print()
    print(f'GPIOA_MODER = {bin(f_signed_to_unsined_32(stm.mem32[stm.GPIOA + stm.GPIO_MODER]))}')
    print(f'GPIOB_MODER = {bin(f_signed_to_unsined_32(stm.mem32[stm.GPIOB + stm.GPIO_MODER]))}')
    print(f'GPIOA_MODER = {hex(f_signed_to_unsined_32(stm.mem32[stm.GPIOA + stm.GPIO_MODER]))}')
    print(f'GPIOB_MODER = {hex(f_signed_to_unsined_32(stm.mem32[stm.GPIOB + stm.GPIO_MODER]))}')

main()